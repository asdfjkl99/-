2.1
1) len - 1
2) mid = (first + last) / 2
3) a[mid] == key
4) last = mid - 1
5) first = mid + 1

2.2
1) first > last
2) (first + last) / 2
3) a[mid] == key
4) BinSearch (a, first, mid - 1, key)
5) BinSearch (a, mid + 1, last, key)

3.1
1) int result = 1;
2) for (int = 0; i<n; i++)
3) 	result *= a;
4) return result;

3.2
1) if (n == 0)
2)	return 1; 
4) return a * power(a, n-1);

fibo

int fibo(int n)
{
	if ( n <= 0)
		return -1;
	else if ( n == 1)
		return 0;
	else if ( n == 2)
		return 1;
	else
		return fibo(n-1) + fibo (n-2);
}

factorial

int factorial(int n)
{
	if ( n == 0)
		return 1;
	
	return n * factorial (n - 1);
}